name: Build release artifacts

on:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  # build_deb:
  #   name: Build Debian .deb

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: Build and extract Debian .deb artifact via Docker
  #     run: |
  #       echo "-- Setting variables --"
  #       export PG_VER=15
  #       export PLRUST_VER=$( echo "${{ github.ref_name }}" | sed -e s/^v// )
  #       export DEB_FILENAME="plrust-$PLRUST_VER-debian-pg$PG_VER-x86_64.deb"

  #       echo "-- Building artifact via Docker --"
  #       docker build \
  #         --build-arg PG_VER=$PG_VER \
  #         --build-arg PLRUST_VER=$PLRUST_VER\
  #         --build-arg DEB_FILENAME=$DEB_FILENAME \
  #         -f .github/docker/Dockerfile.debian-artifact-build \
  #         -t plrust-debian \
  #         .

  #       echo "-- Creating container --"
  #       container_id=$(docker create plrust-debian)

  #       echo "-- Extracting file from container --"
  #       docker cp $container_id:/out/$DEB_FILENAME /home/runner/$DEB_FILENAME

  #       echo "-- Destroying container --"
  #       docker rm -v $container_id

  #   - name: Upload Debian .deb artifact
  #     uses: softprops/action-gh-release@v1
  #     with:
  #       files: /home/runner/plrust*.deb

  test_aarch64:
    name: Build Debian .deb

    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-east-2
        role-to-assume: arn:aws:iam::950481341027:role/github_oidc_iam_role
        role-session-name: GithubPlrustSession

    - name: attemp fake launch
      run: aws ec2 run-instances --launch-template LaunchTemplateId=lt-0bad2911d6aad1b0d

